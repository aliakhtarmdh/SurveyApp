@model SurveyApp.Models.Survey

@{
    ViewData["Title"] = "Edit Survey";
}

<h1>Edit Survey</h1>

<h4>Survey</h4>
<hr />

@using (Html.BeginForm("Edit", "Surveys", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Age, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FeedbackType, htmlAttributes: new { @class = "control-label" })
        @Html.DropDownListFor(model => model.FeedbackType, (IEnumerable<SelectListItem>)ViewBag.FeedbackTypes, "Select Feedback Type", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.FeedbackType, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ServicesUsed, "Services Used", htmlAttributes: new { @class = "control-label" })
        @foreach (var service in (IEnumerable<SelectListItem>)ViewBag.Services)
        {
            <div class="form-check">
                <input type="checkbox" class="form-check-input" id="service_@service.Value" name="ServicesUsed" value="@service.Value" @(Model.ServicesUsed.Contains(service.Value) ? "checked" : "") />
                <label class="form-check-label" for="service_@service.Value">@service.Text</label>
            </div>
        }
        @Html.ValidationMessageFor(model => model.ServicesUsed, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DocumentPath, htmlAttributes: new { @class = "control-label" })
        <input type="file" name="documentPath" class="form-control" />
        @Html.ValidationMessageFor(model => model.DocumentPath, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AdditionalComments, htmlAttributes: new { @class = "control-label" })
        @Html.TextAreaFor(model => model.AdditionalComments, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.AdditionalComments, "", new { @class = "text-danger" })
    </div>

    <input type="hidden" asp-for="Id" />

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <a href="@Url.Action("Index")" class="btn btn-secondary">Cancel</a>
    </div>
}
